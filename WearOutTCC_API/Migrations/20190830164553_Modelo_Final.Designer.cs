// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WearOutTCC_API.Models;

namespace WearOutTCC_API.Migrations
{
    [DbContext(typeof(MyContextBase))]
    [Migration("20190830164553_Modelo_Final")]
    partial class Modelo_Final
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("wearOut_TCC")
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WearOutTCC_API.Models.Cliente", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("userId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Cep")
                        .HasColumnName("cep");

                    b.Property<string>("Cidade")
                        .HasColumnName("cidade")
                        .HasMaxLength(20);

                    b.Property<long>("Cpf")
                        .HasColumnName("cpf");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(50);

                    b.Property<string>("Endereco")
                        .HasColumnName("endereco")
                        .HasMaxLength(20);

                    b.Property<string>("Estado")
                        .HasColumnName("estado")
                        .HasMaxLength(20);

                    b.Property<string>("FullName")
                        .HasColumnName("fullName")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasMaxLength(20);

                    b.Property<string>("UserName")
                        .HasColumnName("userName")
                        .HasMaxLength(12);

                    b.Property<string>("tipo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)))
                        .HasColumnName("tipo")
                        .HasDefaultValue("C");

                    b.HasKey("UserId")
                        .HasName("userId");

                    b.ToTable("tbCliente");
                });

            modelBuilder.Entity("WearOutTCC_API.Models.Fornecedor", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("fornecedorId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Cep")
                        .HasColumnName("cep");

                    b.Property<string>("Cidade")
                        .HasColumnName("cidade")
                        .HasMaxLength(20);

                    b.Property<long>("Cpf")
                        .HasColumnName("cpf");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(50);

                    b.Property<string>("Endereco")
                        .HasColumnName("endereco")
                        .HasMaxLength(20);

                    b.Property<string>("Estado")
                        .HasColumnName("estado")
                        .HasMaxLength(20);

                    b.Property<string>("FullName")
                        .HasColumnName("fullName")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasMaxLength(20);

                    b.Property<long>("Phone")
                        .HasColumnName("phone");

                    b.Property<string>("UserName")
                        .HasColumnName("userName")
                        .HasMaxLength(12);

                    b.Property<long?>("VendedorUserId");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)))
                        .HasColumnName("tipo")
                        .HasDefaultValue("F");

                    b.HasKey("UserId")
                        .HasName("fornecedorId");

                    b.HasIndex("VendedorUserId");

                    b.ToTable("tbFornecedor");
                });

            modelBuilder.Entity("WearOutTCC_API.Models.Negociacao", b =>
                {
                    b.Property<long>("NegociacaoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ClienteUserId");

                    b.Property<DateTime>("DtNegociacao")
                        .HasColumnName("dtNegociacao")
                        .HasColumnType("datetime");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnName("valorTotal")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<long?>("VendedorUserId");

                    b.HasKey("NegociacaoId")
                        .HasName("negociacaoId");

                    b.HasIndex("ClienteUserId");

                    b.HasIndex("VendedorUserId");

                    b.ToTable("tbNegociacao");
                });

            modelBuilder.Entity("WearOutTCC_API.Models.Produto", b =>
                {
                    b.Property<long>("ProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("produtoId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Categoria")
                        .HasColumnName("categoria")
                        .HasMaxLength(50);

                    b.Property<long>("Codigo")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .HasColumnName("descricao")
                        .HasMaxLength(50);

                    b.Property<DateTime>("DtFornecida")
                        .HasColumnName("dtFornecida")
                        .HasColumnType("datetime");

                    b.Property<long?>("FornecedorUserId");

                    b.Property<long>("IdEstoque")
                        .HasColumnName("idEstoque");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.Property<long?>("NegociacaoId");

                    b.Property<string>("NomeEstoque")
                        .HasColumnName("nomeEstoque")
                        .HasMaxLength(50);

                    b.Property<decimal>("Preco")
                        .HasColumnName("preco")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<long>("QtdFornecida")
                        .HasColumnName("qtdFornecida");

                    b.Property<long>("QtdProduto")
                        .HasColumnName("qtdProduto");

                    b.Property<long?>("VendedorUserId");

                    b.HasKey("ProdutoId")
                        .HasName("produtoId");

                    b.HasIndex("FornecedorUserId");

                    b.HasIndex("NegociacaoId");

                    b.HasIndex("VendedorUserId");

                    b.ToTable("tbProduto");
                });

            modelBuilder.Entity("WearOutTCC_API.Models.Vendedor", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("vendedorId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Cep")
                        .HasColumnName("cep");

                    b.Property<string>("Cidade")
                        .HasColumnName("cidade")
                        .HasMaxLength(20);

                    b.Property<long>("Cpf")
                        .HasColumnName("cpf");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(50);

                    b.Property<string>("Endereco")
                        .HasColumnName("endereco")
                        .HasMaxLength(20);

                    b.Property<string>("Estado")
                        .HasColumnName("estado")
                        .HasMaxLength(20);

                    b.Property<string>("FullName")
                        .HasColumnName("fullName")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasMaxLength(20);

                    b.Property<string>("UserName")
                        .HasColumnName("userName")
                        .HasMaxLength(12);

                    b.Property<string>("tipo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)))
                        .HasColumnName("tipo")
                        .HasDefaultValue("F");

                    b.HasKey("UserId")
                        .HasName("vendedorId");

                    b.ToTable("tbVendedor");
                });

            modelBuilder.Entity("WearOutTCC_API.Models.Fornecedor", b =>
                {
                    b.HasOne("WearOutTCC_API.Models.Vendedor", "Vendedor")
                        .WithMany("Fornecedores")
                        .HasForeignKey("VendedorUserId");
                });

            modelBuilder.Entity("WearOutTCC_API.Models.Negociacao", b =>
                {
                    b.HasOne("WearOutTCC_API.Models.Cliente", "Cliente")
                        .WithMany("Negociacoes")
                        .HasForeignKey("ClienteUserId");

                    b.HasOne("WearOutTCC_API.Models.Vendedor", "Vendedor")
                        .WithMany()
                        .HasForeignKey("VendedorUserId");
                });

            modelBuilder.Entity("WearOutTCC_API.Models.Produto", b =>
                {
                    b.HasOne("WearOutTCC_API.Models.Fornecedor", "Fornecedor")
                        .WithMany("Produtos")
                        .HasForeignKey("FornecedorUserId");

                    b.HasOne("WearOutTCC_API.Models.Negociacao")
                        .WithMany("Produtos")
                        .HasForeignKey("NegociacaoId");

                    b.HasOne("WearOutTCC_API.Models.Vendedor", "Vendedor")
                        .WithMany("Produtos")
                        .HasForeignKey("VendedorUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
